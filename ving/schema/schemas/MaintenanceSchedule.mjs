import { baseSchemaProps, dbString, zodString, dbEnum, dbBoolean, dbText, zodText, dbRelation, dbDateTime, dbTimestamp, dbInt, dbJson, zodNumber, zodJsonObject } from '../helpers.mjs';

export const maintenanceScheduleSchema = {
    kind: 'MaintenanceSchedule',
    tableName: 'maintenanceschedules',
    owner: ['admin', 'maintenanceManager'],
    props: [
        ...baseSchemaProps,
        {
            type: "enum",
            name: "recurrence",
            required: true,
            length: 20,
            default: 'monthly',
            db: (prop) => dbEnum(prop),
            enums: ['yearly', 'monthly', 'weekly', 'daily'],
            enumLabels: ['Yearly', 'Monthly', 'Weekly', 'Daily'],
            view: ['owner',],
            edit: ['owner'],
        },
        {
            type: "integer",
            name: 'months',
            required: false,
            default: 0,
            db: (prop) => dbInt(prop),
            zod: (prop) => zodNumber(prop).gte(0).lte(12),
            view: ['owner'],
            edit: ['owner'],
        },
        {
            type: "integer",
            name: 'weeks',
            required: false,
            default: 0,
            db: (prop) => dbInt(prop),
            zod: (prop) => zodNumber(prop).gte(0).lte(5),
            view: ['owner'],
            edit: ['owner'],
        },
        {
            type: "integer",
            name: 'days',
            default: 0,
            required: false,
            db: (prop) => dbInt(prop),
            zod: (prop) => zodNumber(prop).gte(0).lte(31),
            view: ['owner'],
            edit: ['owner'],
        },
        {
            type: "id",
            name: 'maintenanceItemId',
            required: true,
            filterQualifier: true,
            length: 36,
            db: (prop) => dbRelation(prop),
            relation: {
                type: 'parent',
                name: 'item',
                kind: 'MaintenanceItem',
            },
            default: undefined,
            view: ['owner'],
            edit: ['owner'],
        },
        {
            type: "id",
            name: 'maintenanceTaskId',
            required: true,
            filterQualifier: true,
            length: 36,
            db: (prop) => dbRelation(prop),
            relation: {
                type: 'parent',
                name: 'task',
                kind: 'MaintenanceTask',
            },
            default: undefined,
            view: ['owner'],
            edit: ['owner'],
        },
        {
            type: "string",
            name: "description",
            required: false,
            default: '',
            db: (prop) => dbMediumText(prop),
            zod: (prop) => zodMediumText(prop),
            view: [],
            edit: ['owner'],
        },
        {
            type: "string",
            name: "jobsId",
            required: false,
            default: '',
            length: 255,
            db: (prop) => dbString(prop),
            zod: (prop) => zodString(prop),
            view: ['private'],
            edit: ['owner'],
        },
    ],
};