import { baseSchemaId, baseSchemaCreatedAt, baseSchemaUpdatedAt, dbVarChar, dbString, zodString, zodCron, dbEnum, dbBoolean, dbMediumText, zodMediumText, dbText, zodText, dbRelation, dbDateTime, dbTimestamp, dbInt, dbJson, zodNumber, zodJsonObject } from '../helpers.mjs';

export const hardwareScheduleSchema = {
    kind: 'HardwareSchedule',
    tableName: 'hardwareschedules',
    owner: ['admin', 'maintenanceManager'],
    props: [
        { ...baseSchemaId },
        { ...baseSchemaCreatedAt },
        { ...baseSchemaUpdatedAt },
        {
            type: "string",
            name: "schedule",
            required: true,
            unique: false,
            length: 120,
            default: '* * * * *',
            filterQualifier: true,
            db: (prop) => dbVarChar(prop),
            zod: (prop) => zodCron(prop),
            view: [],
            edit: ['owner'],
        },
        {
            type: "id",
            name: 'hardwareItemId',
            required: true,
            filterQualifier: true,
            db: (prop) => dbRelation(prop),
            relation: {
                type: 'parent',
                name: 'item',
                kind: 'HardwareItem',
            },
            default: undefined,
            view: ['owner'],
            edit: ['owner'],
        },
        {
            type: "id",
            name: 'hardwareTaskId',
            required: true,
            filterQualifier: true,
            db: (prop) => dbRelation(prop),
            relation: {
                type: 'parent',
                name: 'task',
                kind: 'HardwareTask',
            },
            default: undefined,
            view: ['owner'],
            edit: ['owner'],
        },
        {
            type: "string",
            name: "description",
            required: false,
            default: '',
            length: 16777215,
            db: (prop) => dbMediumText(prop),
            zod: (prop) => zodMediumText(prop),
            view: [],
            edit: ['owner'],
        },
        {
            type: "id",
            name: 'cronJobId',
            required: false,
            filterQualifier: false,
            default: undefined,
            db: (prop) => dbRelation(prop),
            relation: {
                type: 'parent',
                name: 'cronjob',
                kind: 'CronJob',
            },
            view: ['owner',],
            edit: ['owner'],
        },
        {
            type: "int",
            name: 'ticketPriority',
            default: 3,
            required: true,
            db: (prop) => dbInt(prop),
            zod: (prop) => zodNumber(prop).gte(1).lte(5),
            view: ['owner'],
            edit: ['owner'],
        },
    ],
};